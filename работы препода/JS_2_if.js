'use strict';
/* eslint-disable prefer-const */
/* eslint-disable no-magic-numbers */

// 1. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–µ–º –æ–Ω —è–≤–ª—è–µ—Ç—Å—è: 
// —Ä–µ–±–µ–Ω–∫–æ–º (0‚Äì2), –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–º (12‚Äì18), –≤–∑—Ä–æ—Å–ª—ã–º (18_60) –∏–ª–∏ –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–º (60‚Äì ...).
function ageInterval(age) {
  if (0 <= age && age <= 2) return '–º–ª–∞–¥–µ–Ω–µ—Ü';
  if (2 < age && age <= 12) return '—Ä–µ–±–µ–Ω–æ–∫';
  if (12 < age && age <= 18) return '–ø–æ–¥—Ä–æ—Å—Ç–æ–∫';
  if (18 < age && age <= 60) return '–≤–∑—Ä–æ—Å–ª—ã–π';
  if (60 < age) return '–ø–µ–Ω—Å–∏–æ–Ω–µ—Ä';
  return '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ —á—Ç–æ';
}
let age = +prompt('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç', 33);
alert('–í—ã ' + ageInterval(age));

// 2. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 9 –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–º—É —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª, 
// –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω –Ω–∞ —ç—Ç–æ–π –∫–ª–∞–≤–∏—à–µ (1‚Äì!,2‚Äì@, 3‚Äì# –∏ —Ç. –¥).
function shiftSymbol(num) {
  switch (num) {
    case 0: return ')';
    case 1: return '!';
    case 2: return '@';
    case 3: return '#';
    case 4: return '$';
    case 5: return '%';
    case 6: return '^';
    case 7: return '&';
    case 8: return '*';
    case 9: return '(';
  }
}
let num = +prompt('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 9', 5);
alert('–°–ø–µ—Ü—Å–∏–º–≤–æ–ª: ' + shiftSymbol(num));

// 3. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—Ä–µ—Ö–∑–Ω–∞—á–Ω–æ–µ –∏ —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å,
// –µ—Å—Ç—å –ª–∏ –≤ –Ω–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ü–∏—Ñ—Ä—ã.
function checkSameDigits(d1, d2, d3) { // —Ñ—É–Ω–∫—Ü–∏—è —Ç—É—Ç –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞
  // eslint-disable-next-line eqeqeq
  return d1 == d2 || d2 == d3 || d3 == d1;
}

let num3digit = +prompt('–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ', 123),
  n3 = num3digit % 10,
  n2 = Math.trunc(num3digit / 10) % 10,
  n1 = Math.trunc(num3digit / 100) % 10;
alert(checkSameDigits(n1, n2, n3) ? '–û–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ü–∏—Ñ—Ä—ã –µ—Å—Ç—å üëç' : '–û–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Ü–∏—Ñ—Ä –Ω–µ—Ç üëé');

// 4. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≥–æ–¥ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –æ–Ω
// –∏–ª–∏ –Ω–µ—Ç. –í–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥ –ª–∏–±–æ –∫—Ä–∞—Ç–µ–Ω 400, –ª–∏–±–æ –∫—Ä–∞—Ç–µ–Ω 4 –∏ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –∫—Ä–∞—Ç–µ–Ω 100.
function isLeapYear(year) {
  return 0 === year % 400 || 0 === year % 4 && year % 100;
}


// 5. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—è—Ç–∏—Ä–∞–∑—Ä—è–¥–Ω–æ–µ —á–∏—Å–ª–æ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
function isPalindromeNumber(n) {
  let d5 = n % 10; n = Math.trunc(n / 10);
  let d4 = n % 10; n = Math.trunc(n / 10);
  /*            */ n = Math.trunc(n / 10);
  let d2 = n % 10; n = Math.trunc(n / 10);
  let d1 = n % 10;
  return d5 === d1 && d4 === d2;
}
let fiveDigit = +prompt('–í–≤–µ–¥–∏—Ç–µ –ø—è—Ç–∏–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ', 12345);
alert('–ß–∏—Å–ª–æ - ' + (isPalindromeNumber(fiveDigit) ? '–ø–∞–ª–∏–Ω–¥—Ä–æ–º üëå' : '–Ω–µ –ø–∞–ª–∏–Ω–¥—Ä–æ–º üôÑ'));

// 6. –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä –≤–∞–ª—é—Ç. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ USD, –≤—ã–±–∏—Ä–∞–µ—Ç, –≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É 
// —Ö–æ—á–µ—Ç –ø–µ—Ä–µ–≤–µ—Å—Ç–∏: EUR, UAN –∏–ª–∏ AZN, –∏ –ø–æ–ª—É—á–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—É–º–º—É.
function getExchangeRate(threeLetters) {
  switch (threeLetters.toUpperCase()) {
    case 'USD': return 1;
    case 'EUR': return 1.03;
    case 'RUB': return 65;
    case 'UAH': return 37;
    case 'AZN': return 1.7;
  }
}

let
  usd = +prompt('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ USD', 1000),
  currency = prompt('–í –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –∂–µ–ª–∞–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ (EUR, UAH –∏–ª–∏ AZN)', 'EUR'),
  exchangeRate = getExchangeRate(currency);
alert(`${usd} USD  –ü–æ –∫—É—Ä—Å—É ${exchangeRate} –±—É–¥–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –≤ ${exchangeRate * usd} ${currency}`);

// 7. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ —Å—É–º–º—É –∫ –æ–ø–ª–∞—Ç–µ —Å–æ —Å–∫–∏–¥–∫–æ–π:
//  –æ—Ç 200 –¥–æ 300 ‚Äì —Å–∫–∏–¥–∫–∞ –±—É–¥–µ—Ç 3%, –æ—Ç 300 –¥–æ 500 ‚Äì 5%, –æ—Ç 500 –∏ –≤—ã—à–µ ‚Äì 7%.
function calcDiscount(cost) {
  return cost >= 500 ? 7 : cost >= 300 ? 5 : cost >= 200 ? 3 : 0;
}

let
  cost = +prompt('–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∞—à–µ–π –ø–æ–∫—É–ø–∫–∏', 380),
  discount = calcDiscount(cost);
alert(`–°—Ç–æ–∏–º–æ—Å—Ç—å —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏ ${discount}% —Å–æ—Å—Ç–∞–≤–∏—Ç: ${cost - cost * discount / 100}`);

// 8. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ –ø–µ—Ä–∏–º–µ—Ç—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ —Ç–∞–∫–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å –ø–æ–º–µ—Å—Ç–∏—Ç—å—Å—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç.
function getDiameterByLength(l) { // —Ñ—É–Ω–∫—Ü–∏—è —Ç—É—Ç –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞
  return l / Math.PI;
}

let
  circleLength = +prompt('–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏', 315),
  squarePerimeter = +prompt('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–º–µ—Ç—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞', 400);
alert('–¢–∞–∫–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å ' + (getDiameterByLength(circleLength) <= squarePerimeter / 4 ? '–ø–æ–º–µ—Å—Ç–∏—Ç—å—Å—è' : '–Ω–µ –ø–æ–º–µ—Å—Ç–∏—Ç—å—Å—è') + ' –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç');


// 9. –ó–∞–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 3 –≤–æ–ø—Ä–æ—Å–∞, –≤ –∫–∞–∂–¥–æ–º –≤–æ–ø—Ä–æ—Å–µ –ø–æ 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞.
//  –ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è 2 –±–∞–ª–ª–∞. –ü–æ—Å–ª–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤—ã–≤–µ–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–±—Ä–∞–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤.

function ask(question, correct) {
  // eslint-disable-next-line eqeqeq
  if (prompt(question) == correct)
    return 2;
  return 0;
}

let record =
  0
  + ask('–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä "&&"? \n1) - –õ–æ–≥–∏—á–µ—Å–∫–æ–µ \'–ò–õ–ò\' \n2) - –õ–æ–≥–∏—á–µ—Å–∫–æ–µ \'–ò\' \n3) - –î—Ä—É–≥–æ–µ', 2)
  + ask('–î–ª—è —á–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä "!!"? \n1) - –≠—Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ \n2) - –õ–æ–≥–∏—á–µ—Å–∫–æ–µ \'–ò–õ–ò\' \n3) - –ü—Ä–∏–≤–æ–¥–∏—Ç –∫ –ª–æ–≥–∏—á–µ—Å–∫–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é  ', 3)
  + ask('–ö–∞–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ JS —è–≤–ª—è—é—Ç—Å—è –ª–æ–∂–Ω—ã–º–∏? \n1) - false \n2) - 0 –∏ false \n3) - 0, false, \'\', null, undefined –∏ NaN ', 3);
alert('–í—ã –Ω–∞–±—Ä–∞–ª–∏ ' + record + ' –±–∞–ª–ª–æ–≤ –∑–∞ –æ—Ç–≤–µ—Ç—ã.');

// 10. –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–∞—Ç—É (–¥–µ–Ω—å, –º–µ—Å—è—Ü, –≥–æ–¥) –∏ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â—É—é –∑–∞ –Ω–µ–π –¥–∞—Ç—É. –£—á—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π
// –º–µ—Å—è—Ü, –≥–æ–¥, –∞ —Ç–∞–∫–∂–µ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥. 

function daysInMonth(month, year) { // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ –¥–Ω–µ–π –≤ –º–µ—Å—è—Ü–µ
  switch (month) {
    case 2: // —Ñ–µ–≤—Ä–∞–ª—å 
      return isLeapYear(year) ? 29 : 28;
    case 4: // –∞–ø—Ä–µ–ª—å
    case 6: // –∏—é–Ω—å
    case 9: // —Å–µ–Ω—Ç—è–±—Ä—å
    case 11:  // –Ω–æ—è–±—Ä—å
      return 30;
  }
  return 31;
}

function nextDay(year, month, day) { // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞—Ç—É —Å–ª–µ–¥—É—é—â—É—é –∑–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π
  day++;// day = day + 1;
  if (day > daysInMonth(month, year)) {
    day = 1; // –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    month++;// month = month + 1;
  }
  if (month > 12) {
    month = 1; // –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞
    year++; // year = year + 1;
  }
  return year + '-' + month + '-' + day;
}

let day = +prompt('–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –¥–∞—Ç—ã'),
  month = +prompt('–í–≤–µ–¥–∏—Ç–µ –º–µ—Å—è—Ü –¥–∞—Ç—ã'),
  year = +prompt('–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –¥–∞—Ç—ã');

alert(`–°–ª–µ–¥—É—é—â–∞—è –∑–∞ –≤–∞—à–µ–π –¥–∞—Ç–∞ - ${nextDay(year, month, day)}`);

// –ø—Ä–æ–≤–µ—Ä–∫–∞ isPalindromeNumber
console.log('12320 –ø–∞–ª–∏–Ω–¥—Ä–æ–º? =', isPalindromeNumber(12320));
console.log('12321 –ø–∞–ª–∏–Ω–¥—Ä–æ–º? =', isPalindromeNumber(12321));

// –ø—Ä–æ–≤–µ—Ä–∫–∞ isLeapYear
console.log('2000 –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π? =', isLeapYear(2000));
console.log('2001 –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π? =', isLeapYear(2001));
console.log('1900 –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π? =', isLeapYear(1900));

// –ø—Ä–æ–≤–µ—Ä–∫–∞ daysNumberInMonth
for (let i = 1; i <= 12; i++)
  console.log('–í ', i, ' –º–µ—Å—è—Ü–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –≥–æ–¥–∞: ', daysInMonth(i, 2021), ' –¥–Ω–µ–π');
console.log('–í —Ñ–µ–≤—Ä–∞–ª–µ –≤–∏—Å–æ–∫–æ—Å–Ω–æ–≥–æ (2024) –≥–æ–¥–∞: ', daysInMonth(2, 2024), ' –¥–Ω–µ–π');

// –ø—Ä–æ–≤–µ—Ä–∫–∞ nextDay
console.log('2021-01-01 + 1 = ', nextDay(2021, 1, 1));
console.log('2021-10-31 + 1 = ', nextDay(2021, 10, 31));
console.log('2021-12-31 + 1 = ', nextDay(2021, 12, 31));
console.log('2020-2-28 + 1 = ', nextDay(2020, 2, 28));
console.log('2021-2-28 + 1 = ', nextDay(2021, 2, 28));

// –ø—Ä–∏—ë–º Reverse switch https://dev.to/gabrielrufino/reverse-switch-26f3
function ageInterval2(age) {
  switch (true) {
    case age < 0: return '–º–∞–ª–æ, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç';
    case 120 < age: return '–º–Ω–æ–≥–æ';
    case age <= 2: return '–º–ª–∞–¥–µ–Ω–µ—Ü';
    case age <= 12: return '—Ä–µ–±–µ–Ω–æ–∫';
    case age <= 18: return '–ø–æ–¥—Ä–æ—Å—Ç–æ–∫';
    case age <= 60: return '–≤–∑—Ä–æ—Å–ª—ã–π';
    case 60 < age: return '–ø–µ–Ω—Å–∏–æ–Ω–µ—Ä';
  }
  return '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ —á—Ç–æ';
}